/*
 * File: app/view/AddCommentWindow.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.AddCommentWindow', {
    extend: 'Ext.window.Window',

    autoShow: false,
    floating: true,
    frame: false,
    height: 250,
    id: 'commentWindow',
    itemId: 'commentWindowItem',
    width: 400,
    shadowOffset: 32,
    layout: {
        type: 'fit'
    },
    bodyBorder: false,
    animCollapse: false,
    frameHeader: false,
    hideCollapseTool: false,
    icon: 'images/comment2.png',
    title: 'Add a new comment to the record',
    maximizable: true,
    minimizable: true,
    modal: true,
    plain: false,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'textareafield',
                    border: 0,
                    id: 'txtNewComment',
                    fieldLabel: 'Label',
                    hideLabel: true
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    items: [
                        {
                            xtype: 'tbspacer',
                            flex: 1
                        },
                        {
                            xtype: 'button',
                            id: 'btnCancelNewComment',
                            text: 'Cancel',
                            listeners: {
                                click: {
                                    fn: me.onBtnCancelNewCommentClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            id: 'btnOkNewComment',
                            width: 80,
                            text: 'Ok',
                            listeners: {
                                click: {
                                    fn: me.onBtnOkNewCommentClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            listeners: {
                show: {
                    fn: me.onCommentWindowShow,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onBtnCancelNewCommentClick: function(button, e, options) {

        GLOB.hideCommentWindow();
    },

    onBtnOkNewCommentClick: function(button, e, options) {
        var textInput=Ext.getCmp("txtNewComment");
        var commentText=textInput.getValue();
        GLOB.addCommentToTheSelectedRecord(commentText,null);

        GLOB.hideCommentWindow();

    },

    onCommentWindowShow: function(abstractcomponent, options) {
        Ext.getCmp("txtNewComment").focus(true,100);
    }

});